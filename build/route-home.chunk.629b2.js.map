{"version":3,"sources":["webpack:///./routes/home/index.js"],"names":["Home","showAdvanced","useState","amount","setAmount","transferAmount","setTransferAmount","elevyAmount","setElevyAmount","elevyFormRef","useRef","elevyChargeRef","useEffect","elevyCharge","className","ref","method","for","tabIndex","type","name","placeholder","pattern","inputMode","value","toLocaleString","onInput","event","parsedAmount","parseInt","target","replaceAll","isNaN","id","onKeyUp","keyCode","current","focus","maximumFractionDigits","minimumFractionDigits","readOnly","onClick","e","preventDefault"],"mappings":"glCA8IeA,UA3IF,SAAC,GAAqB,IAAnBC,EAAmB,EAAnBA,aAEd,IAA4BC,YAAS,IAArC,GAAOC,EAAP,KAAeC,EAAf,KACA,IAA4CF,YAAS,GAArD,GAAOG,EAAP,KAAuBC,EAAvB,KACA,IAAsCJ,YAAS,GAA/C,GAAOK,EAAP,KAAoBC,EAApB,KACIC,EAAeC,YAAO,MACtBC,EAAiBD,YAAO,MAE5BE,aAAU,WACR,GAAc,IAAVT,EACFG,EAAkB,GAClBE,EAAe,QACV,GAAIL,EAAS,IAAK,CACvB,IACIU,EAbS,MAYOV,EAAS,KAG7BG,EAD0BH,EAASU,GAEnCL,EAAeK,QAEfP,EAAkBH,GAClBK,EAAe,KAEhB,CAACL,IAkBJ,OACE,oBAAMW,UAAU,iBACd,oBAAMA,UAAU,gBAAgBC,IAAKN,EAAcO,OAAO,QACxD,mBAAKF,UAAU,yBACb,mBAAKA,UAAU,yBACb,kBAAIA,UAAU,eAAd,uBAGJ,mBAAKA,UAAU,mCACb,mBAAKA,UAAU,cACb,qBAAOG,IAAI,SAASH,UAAU,aAA9B,qBAGA,uBACE,qBACEI,SAAU,EACVC,KAAK,OACLC,KAAK,SACLC,YAAY,IACZC,QAAQ,UACRC,UAAU,UAEVC,MAAOrB,EAAOsB,eAAe,SAC7BC,QAvCO,SAACC,GACpB,IAAMC,EAAeC,SAASF,EAAMG,OAAON,MAAMO,WAAW,IAAK,IAAK,IACjEC,MAAMJ,GAITxB,EAAU,IAHVA,EAAUwB,IAqCAd,UAAU,aACVmB,GAAG,SACHC,QAhCI,SAACP,GACI,IAAjBA,EAAMQ,SACRxB,EAAeyB,QAAQC,WAgCf,oBAAMvB,UAAU,YAAhB,UAIN,mBAAKA,UAAU,mCACb,mBAAKA,UAAU,cACb,qBAAOG,IAAI,iBAAiBH,UAAU,aAAtC,iBAGA,uBACE,qBACEK,KAAK,OACLK,MAAK,UAAKnB,EAAeoB,eAAe,QAAS,CAC/Ca,sBAAuB,EACvBC,sBAAuB,KAEzBC,UAAQ,EACRpB,KAAK,iBACLN,UAAU,gCACVmB,GAAG,mBAEL,oBAAMnB,UAAU,YAAhB,UAIN,mBAAKA,UAAU,yBACb,mBAAKA,UAAU,yBACb,oBAAMA,UAAU,aAAhB,kBACA,oBACEA,UAAU,qBACVI,SAAU,EACVH,IAAKJ,GAHP,QAKQ,IALR,UAMMJ,EAAYkB,eAAe,QAAS,CACtCa,sBAAuB,EACvBC,sBAAuB,MAG3B,oBAAMzB,UAAU,aAAhB,qCAGJ,mBAAKA,UAAU,yBACb,mBAAKA,UAAU,yBACb,sBACEA,UAAU,mBACVK,KAAK,SACLsB,QAAS,SAACC,GAGR,OAFAA,EAAEC,iBACF1C,KACO,IANX,4BAaJ,mBAAKa,UAAU,yBACb,mBAAKA,UAAU,yBACb,oBAAMA,UAAU,cAAhB","file":"route-home.chunk.629b2.js","sourcesContent":["import { h } from \"preact\";\nimport { useState, useEffect, useRef } from \"preact/hooks\";\n\nconst Home = ({ showAdvanced }) => {\n  const elevyTax = 0.015; //1.5/100\n  const [amount, setAmount] = useState(\"\");\n  const [transferAmount, setTransferAmount] = useState(0);\n  const [elevyAmount, setElevyAmount] = useState(0);\n  let elevyFormRef = useRef(null);\n  let elevyChargeRef = useRef(null);\n\n  useEffect(() => {\n    if (amount == \"\") {\n      setTransferAmount(0);\n      setElevyAmount(0);\n    } else if (amount > 100) {\n      let taxableAmount = amount - 100;\n      let elevyCharge = taxableAmount * elevyTax;\n      let totalTransferAmount = amount + elevyCharge;\n      setTransferAmount(totalTransferAmount);\n      setElevyAmount(elevyCharge);\n    } else {\n      setTransferAmount(amount);\n      setElevyAmount(0);\n    }\n  }, [amount]);\n\n  const handleChange = (event) => {\n    const parsedAmount = parseInt(event.target.value.replaceAll(\",\", \"\"), 10);\n    if (!isNaN(parsedAmount)) {\n      setAmount(parsedAmount);\n    } else {\n      // elevyFormRef.current.reportValidity();\n      setAmount(\"\");\n    }\n  };\n\n  const handleTab = (event) => {\n    if (event.keyCode == 13) {\n      elevyChargeRef.current.focus();\n    }\n  };\n\n  return (\n    <main className=\"mainContainer\">\n      <form className=\"gridContainer\" ref={elevyFormRef} method=\"POST\">\n        <div className=\"gridItem gridItemFull\">\n          <div className=\"inputGroup centerFlex\">\n            <h1 className=\"displayText\">E-LEVY CALCULATOR</h1>\n          </div>\n        </div>\n        <div className=\"gridItem gridItemFullMobileOnly\">\n          <div className=\"inputGroup\">\n            <label for=\"amount\" className=\"labelText\">\n              You want to send:\n            </label>\n            <div>\n              <input\n                tabIndex={1}\n                type=\"text\"\n                name=\"amount\"\n                placeholder=\"0\"\n                pattern=\"[0-9,.]\"\n                inputMode=\"numeric\"\n                // required\n                value={amount.toLocaleString(\"en-US\")}\n                onInput={handleChange}\n                className=\"inputField\"\n                id=\"amount\"\n                onKeyUp={handleTab}\n              />\n              <span className=\"currency\">GHS</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"gridItem gridItemFullMobileOnly\">\n          <div className=\"inputGroup\">\n            <label for=\"transferAmount\" className=\"labelText\">\n              You will pay:\n            </label>\n            <div>\n              <input\n                type=\"text\"\n                value={`${transferAmount.toLocaleString(\"en-US\", {\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2,\n                })}`}\n                readOnly\n                name=\"transferAmount\"\n                className=\"inputField inputFieldEmphasis\"\n                id=\"transferAmount\"\n              />\n              <span className=\"currency\">GHS</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"gridItem gridItemFull\">\n          <div className=\"inputGroup centerFlex\">\n            <span className=\"labelText\">E-Levy Charge:</span>\n            <span\n              className=\"displayText charge\"\n              tabIndex={2}\n              ref={elevyChargeRef}\n            >\n              + GHS{\" \"}\n              {`${elevyAmount.toLocaleString(\"en-US\", {\n                maximumFractionDigits: 2,\n                minimumFractionDigits: 2,\n              })}`}\n            </span>\n            <span className=\"labelText\">Rate: 1.5%, first 100GHS exempt</span>\n          </div>\n        </div>\n        <div className=\"gridItem gridItemFull\">\n          <div className=\"inputGroup centerFlex\">\n            <button\n              className=\"labelText button\"\n              type=\"button\"\n              onClick={(e) => {\n                e.preventDefault();\n                showAdvanced();\n                return false;\n              }}\n            >\n              Click for more Options\n            </button>\n          </div>\n        </div>\n        <div className=\"gridItem gridItemFull\">\n          <div className=\"inputGroup centerFlex\">\n            <span className=\"disclaimer\">\n              Disclaimer: We did our best to provide accurate results, however\n              you may experience differences in real-world usage.\n            </span>\n          </div>\n        </div>\n      </form>\n      {/* <span className=\"footer\">Made with love</span> */}\n    </main>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}