{"version":3,"sources":["webpack:///./routes/home/style.css","webpack:///./routes/home/index.js","webpack:///../src/index.js"],"names":["Home","useState","amount","setAmount","transferAmount","setTransferAmount","elevyAmount","setElevyAmount","class","style","onSubmit","event","preventDefault","console","log","elevyCharge","totalTransferAmount","method","type","name","value","onChange","parseInt","target","toFixed","readOnly","justifyContent","alignContent","display","margin","getHookState","index","options","currentComponent","currentHook","hooks","__","__h","length","push","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","action","nextValue","setState","useReducer","useEffect","callback","args","state","argsChanged","flushAfterPaintEffects","component","afterPaintEffects","shift","forEach","invokeCleanup","invokeEffect","e","hook","comp","cleanup","oldArgs","newArgs","some","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb","hasErrored","s"],"mappings":"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","file":"route-home.chunk.94b18.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__uRcqa\",\"flexMain\":\"flexMain__o6LYc\",\"flexRow\":\"flexRow__IKjnU\",\"flexItem\":\"flexItem__PodkT\"};","import { h } from \"preact\";\nimport { useState } from \"preact/hooks\";\nimport style from \"./style.css\";\n\nconst Home = () => {\n  const elevyTax = 0.015; //1.5/100\n  const [amount, setAmount] = useState(0);\n  const [transferAmount, setTransferAmount] = useState(0);\n  const [elevyAmount, setElevyAmount] = useState(0);\n\n  const handleCheck = (event) => {\n    event.preventDefault();\n    //assuming it's first transfer of the day\n    if (amount > 100) {\n      console.log(amount);\n      let taxableAmount = amount - 100;\n      let elevyCharge = taxableAmount * elevyTax;\n      let totalTransferAmount = amount + elevyCharge;\n      console.log(elevyCharge);\n      setTransferAmount(totalTransferAmount);\n      setElevyAmount(elevyCharge);\n    } else {\n      setTransferAmount(amount);\n      setElevyAmount(0);\n    }\n\n    console.log(\"checking\");\n    console.log(\"customer amount\", amount);\n  };\n\n  const handleChange = (event) => {\n    setAmount(parseInt(event.target.value));\n  };\n  return (\n    <div class={style.home}>\n      <div class={style.flexMain}>\n        <form onSubmit={handleCheck} method=\"POST\">\n          <div class={style.flexRow}>\n            <div class={style.flexItem}>\n              <label>\n                Amount (GHS):{\" \"}\n                <input\n                  type=\"number\"\n                  name=\"amount\"\n                  value={amount}\n                  onChange={handleChange}\n                />\n              </label>\n            </div>\n            <div class={style.flexItem}>\n              <label>\n                Total due (GHS):\n                <input\n                  type=\"text\"\n                  value={`${transferAmount.toFixed(2)}`}\n                  readOnly\n                  name=\"transferAmount\"\n                />\n              </label>\n            </div>\n          </div>\n\n          <div\n            style={{\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              display: \"flex\",\n              margin: \"10px\",\n            }}\n          >\n            E-Levy (GHS): {`${elevyAmount.toFixed(2)}`}\n          </div>\n          <div\n            style={{\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              display: \"flex\",\n              margin: \"10px\",\n            }}\n          >\n            <button type=\"submit\">Check E-Levy</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => ref.current = null;\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],"sourceRoot":""}