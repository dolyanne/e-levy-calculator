{"version":3,"sources":["webpack:///./components/form/TextField.js","webpack:///./utils/calculations.js","webpack:///./components/containers/GridItem.js","webpack:///./components/containers/ItemGroup.js","webpack:///./components/containers/MainContainer.js","webpack:///./components/form/PickerArrow.js","webpack:///./components/form/PickerItem.js","webpack:///./components/form/Picker.js","webpack:///./utils/platformCharges.js","webpack:///./data/platforms.js","webpack:///./components/form/ChargeLabel.js","webpack:///./components/form/TextDisplay.js","webpack:///./components/form/Charge.js","webpack:///./components/global/Disclaimer.js","webpack:///./components/form/FromPicker.js","webpack:///./components/form/ToPicker.js","webpack:///./routes/advanced/index.js"],"names":["TextField","label","id","placeholder","inputProps","for","className","type","name","defaultProps","exemption","previousAmount","initialExemptAmount","getTaxableAmount","amount","exempt","taxableAmount","getElevyCharge","elevyTax","GridItem","children","ItemGroup","MainContainer","PickerArrow","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","PickerItem","handleSelect","theme","role","onClick","title","Picker","data","updateChoice","close","class","x1","y1","x2","y2","values","map","item","key","MTN_TO_MTN_CHARGE","MTN_TO_OTHERS_EXEMPT","platforms","Map","company","img","getCharge","charge","rate","destination","source","calculatePlatformCharge","sendingFrom","sendingTo","get","platformFunction","getPlatformCharge","ChargeLabel","TextDisplay","Charge","value","chargeProps","toLocaleString","maximumFractionDigits","minimumFractionDigits","Disclaimer","FromPicker","handleChange","tabIndex","event","ToPicker","Advanced","showSimple","useState","setAmount","setPreviousAmount","showPicker","setShowPicker","pickerType","setPickerType","transferAmount","setTransferAmount","elevyAmount","setElevyAmount","setSendingFrom","setSendingTo","platformCharge","setPlatformCharge","elevyChargeRef","useRef","pickerData","from","pickerTitle","to","useEffect","elevyCharge","callback","parsedAmount","parseInt","target","replaceAll","isNaN","handlePickerChange","selection","console","log","method","pattern","inputMode","required","onInput","e","onKeyUp","keyCode","current","focus","ref","preventDefault","preserveChoice","advanced","selectedPicker"],"mappings":"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","file":"route-advanced.chunk.ed5e4.js","sourcesContent":["import { h } from \"preact\";\r\n\r\nconst TextField = ({ label, id, placeholder, inputProps }) => {\r\n  return (\r\n    <>\r\n      <label for={id} className=\"labelText\">\r\n        {label}\r\n      </label>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name={id}\r\n          placeholder={placeholder}\r\n          className=\"inputField\"\r\n          id={id}\r\n          {...inputProps}\r\n        />\r\n        <span className=\"currency\">GHS</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  label: \"label\",\r\n  id: \"\",\r\n  placeholder: \"\",\r\n  inputProps: {},\r\n};\r\n\r\nexport default TextField;\r\n","import { platforms } from \"../data/platforms\";\r\n\r\nexport const elevyTax = 0.015; //1.5/100\r\n\r\nexport function exemption(previousAmount) {\r\n  let finalExemptionAmount = 0;\r\n  let initialExemptAmount = 100;\r\n  if (previousAmount >= initialExemptAmount) {\r\n    finalExemptionAmount = 0; //  user has used up all exemption value for the day and therefore has no exemptions left\r\n  } else if (previousAmount < initialExemptAmount) {\r\n    finalExemptionAmount = initialExemptAmount - previousAmount;\r\n  } else {\r\n    finalExemptionAmount = initialExemptAmount;\r\n  }\r\n  return finalExemptionAmount;\r\n}\r\n\r\nexport function getTaxableAmount(amount, exempt) {\r\n  let taxableAmount = amount - exempt;\r\n  if (taxableAmount < 0) {\r\n    return 0;\r\n  }\r\n\r\n  return taxableAmount;\r\n}\r\n\r\nexport function getElevyCharge(taxableAmount, elevyTax) {\r\n  let elevyCharge = taxableAmount * elevyTax;\r\n  return elevyCharge;\r\n}\r\n\r\nexport function calculateCharge({ previousAmount, amount }) {\r\n  // pick calculation from react component\r\n  let exempt = exemption(previousAmount);\r\n  let taxableAmount = getTaxableAmount(amount, exempt);\r\n  let elevyCharge = getElevyCharge(taxableAmount, elevyTax);\r\n  return elevyCharge;\r\n}\r\n\r\nexport function getPlatformCharge({ source, destination, amount }) {\r\n  // get platform charge\r\n  const platformFunction = platforms.get(source).getCharge;\r\n  const platformCharge = platformFunction({\r\n    source,\r\n    destination,\r\n    amount,\r\n  });\r\n  return platformCharge;\r\n}\r\n\r\nexport const calculatePlatformCharge = (sendingFrom, sendingTo, amount) => {\r\n  let source = \"\";\r\n  let destination = \"\";\r\n\r\n  if (sendingFrom === \"\" && sendingTo === \"\") {\r\n    return 0;\r\n  } else if (sendingFrom !== \"\" && sendingTo !== \"\") {\r\n    source = platforms.get(sendingFrom).key;\r\n    destination = platforms.get(sendingTo).key;\r\n  } else if (sendingFrom !== \"\") {\r\n    source = platforms.get(sendingFrom).key;\r\n    destination = platforms.get(sendingFrom).key;\r\n  }\r\n\r\n  const { charge } = getPlatformCharge({\r\n    source,\r\n    destination,\r\n    amount,\r\n  });\r\n  return charge;\r\n};\r\n","import { h } from \"preact\";\r\n\r\nconst GridItem = ({ className, children }) => {\r\n  return <div className={`gridItem ${className}`}>{children}</div>;\r\n};\r\n\r\nGridItem.defaultProps = {\r\n  className: \"\",\r\n};\r\n\r\nexport default GridItem;\r\n","import { h } from \"preact\";\r\n\r\nconst ItemGroup = ({ className, children }) => {\r\n  return <div className={`inputGroup ${className}`}>{children}</div>;\r\n};\r\n\r\nItemGroup.defaultProps = {\r\n  className: \"\",\r\n};\r\n\r\nexport default ItemGroup;\r\n","import { h } from \"preact\";\r\n\r\nconst MainContainer = ({ children }) => {\r\n  return <main className=\"mainContainer\">{children}</main>;\r\n};\r\n\r\nexport default MainContainer;\r\n","\r\nimport { h } from \"preact\";\r\n\r\nconst PickerArrow = () => {\r\n  return (\r\n    <div className=\"arrowContainer\">\r\n      <span className=\"arrow\">\r\n        <span className=\"alternateText\">to</span>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-arrow-right\"\r\n        >\r\n          <path d=\"M5 12L19 12\" />\r\n          <path d=\"M12 5L19 12 12 19\" />\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PickerArrow;\r\n","import { h } from \"preact\";\r\n\r\nconst PickerItem = ({ title, handleSelect, theme }) => {\r\n  return (\r\n    <div className={`pickerItem ${theme}`} role=\"button\" onClick={handleSelect}>\r\n      <span className=\"pickerContent\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nPickerItem.defaultProps = {\r\n  title: \"\",\r\n  theme: \"\",\r\n};\r\n\r\nexport default PickerItem;\r\n","import { h } from \"preact\";\r\nimport PickerItem from \"./PickerItem\";\r\n\r\nconst Picker = ({ data, title, updateChoice, close }) => {\r\n  return (\r\n    <div className=\"overlayContainer\" onClick={() => close()}>\r\n      <div className=\"pickerContainer\">\r\n        <span className=\"close pointer\" role=\"button\" onClick={() => close()}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            stroke-width=\"2\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            class=\"feather feather-x\"\r\n          >\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n          </svg>\r\n        </span>\r\n        <div className=\"pickerTitle alignCenter\">\r\n          <span className=\"labelText\">{title}</span>\r\n        </div>\r\n        <div className=\"pickerItemContainer\">\r\n          {[...data.values()].map((item) => (\r\n            <PickerItem\r\n              key={item.key}\r\n              title={item.name}\r\n              theme={item.theme}\r\n              handleSelect={() => {\r\n                updateChoice(item.key);\r\n                close();\r\n                return false;\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n","const MTN_TO_MTN_EXEMPT = 100;\r\nconst MTN_TO_MTN_CHARGE = 0.75;\r\nconst MTN_TO_OTHERS_EXEMPT = 100; // change to 100 cedis as per sara's screen shot and run test again\r\nconst MTN_TO_OTHERS_CHARGE = 0.75;\r\nconst MTN_ABOVE_1000_CAP = 1000; // above 1000 has a flat fee of 7.5gh\r\nconst ATMONEY_CHARGE = 0.75; // Same airtelTigo charge for all networks\r\nconst ATMONEY_ABOVE_1000_CAP = 1000; // above 1000 has a flat fee of 10gh\r\nconst ATMONEY_EXEMPT = 100;\r\n\r\nexport function mtnMomoTariffs({ source, destination, amount }) {\r\n  let charge = 0;\r\n  let exempt = MTN_TO_OTHERS_EXEMPT;\r\n  let rate = MTN_TO_MTN_CHARGE;\r\n\r\n  if (destination === source) {\r\n    // mtn to mtn\r\n    if (amount >= MTN_ABOVE_1000_CAP) {\r\n      charge = 7.5;\r\n    } else if (amount > MTN_TO_MTN_EXEMPT) {\r\n      charge = (amount * MTN_TO_MTN_CHARGE) / 100;\r\n    }\r\n    exempt = MTN_TO_OTHERS_EXEMPT;\r\n    rate = MTN_TO_MTN_CHARGE;\r\n  } else {\r\n    //mtn to others\r\n    if (amount >= MTN_ABOVE_1000_CAP) {\r\n      charge = 7.5;\r\n    } else if (amount > MTN_TO_OTHERS_EXEMPT) {\r\n      charge = (amount * MTN_TO_OTHERS_CHARGE) / 100;\r\n    }\r\n    exempt = MTN_TO_OTHERS_EXEMPT;\r\n    rate = MTN_TO_OTHERS_CHARGE;\r\n  }\r\n\r\n  return {\r\n    charge,\r\n    exempt,\r\n    rate,\r\n  };\r\n}\r\n\r\nexport function vodafoneCashTariffs({}) {\r\n  return {\r\n    charge: 0,\r\n    exempt: 0,\r\n    rate: 0,\r\n  }; // Haha transfer charge de3 entua bi da! lol\r\n}\r\n\r\nexport function airtelTigoMoneyTariffs({ amount }) {\r\n  let charge = 0;\r\n  charge = (amount * ATMONEY_CHARGE) / 100;\r\n\r\n  if (amount >= ATMONEY_ABOVE_1000_CAP) {\r\n    charge = 7.5;\r\n  }\r\n\r\n  if (amount <= ATMONEY_EXEMPT) {\r\n    charge = 0;\r\n  }\r\n\r\n  return {\r\n    charge,\r\n    exempt: 0,\r\n    rate: ATMONEY_CHARGE,\r\n  };\r\n}\r\n","import {\r\n  airtelTigoMoneyTariffs,\r\n  mtnMomoTariffs,\r\n  vodafoneCashTariffs,\r\n} from \"../utils/platformCharges\";\r\n\r\nexport const platforms = new Map([\r\n  [\r\n    \"mtn\",\r\n    {\r\n      name: \"MTN\",\r\n      company: \"MTN\",\r\n      img: \"./assets/white-waves.png\",\r\n      key: \"mtn\",\r\n      theme: \"mtn\",\r\n      getCharge: mtnMomoTariffs,\r\n    },\r\n  ],\r\n  [\r\n    \"vodafone\",\r\n    {\r\n      name: \"Vodafone\",\r\n      company: \"Vodafone\",\r\n      img: \"./assets/white-waves.png\",\r\n      key: \"vodafone\",\r\n      theme: \"vodafone\",\r\n      getCharge: vodafoneCashTariffs,\r\n    },\r\n  ],\r\n  [\r\n    \"airtel\",\r\n    {\r\n      name: \"AirtelTigo\",\r\n      company: \"AirtelTigo\",\r\n      img: \"./assets/white-waves.png\",\r\n      key: \"airtel\",\r\n      theme: \"airtel\",\r\n      getCharge: airtelTigoMoneyTariffs,\r\n    },\r\n  ],\r\n]);\r\n","import { h } from \"preact\";\r\n\r\nconst ChargeLabel = ({ label, className }) => {\r\n  return <span className={`labelText ${className}`}>{label}</span>;\r\n};\r\n\r\nChargeLabel.defaultProps = {\r\n  className: \"\",\r\n};\r\n\r\nexport default ChargeLabel;\r\n","import { h } from \"preact\";\r\n\r\nconst TextDisplay = ({ className, children }) => {\r\n  return <span className={`displayText ${className}`}>{children}</span>;\r\n};\r\n\r\nTextDisplay.defaultProps = {\r\n  className: \"\",\r\n};\r\n\r\nexport default TextDisplay;\r\n","import { h } from \"preact\";\r\n\r\nconst Charge = ({ className, value, chargeProps }) => {\r\n  return (\r\n    <span\r\n      {...chargeProps}\r\n      className={`chargeAlt ${className}`}\r\n    >{`+ ${value.toLocaleString(\"en-US\", {\r\n      maximumFractionDigits: 2,\r\n      minimumFractionDigits: 2,\r\n    })} GHS`}</span>\r\n  );\r\n};\r\n\r\nCharge.defaultProps = {\r\n  className: \"\",\r\n  chargeProps: {},\r\n};\r\n\r\nexport default Charge;\r\n","import { h } from \"preact\";\r\n\r\nconst Disclaimer = () => {\r\n  return (\r\n    <span className=\"disclaimer\">\r\n      Disclaimer: We did our best to provide accurate results however, you may\r\n      experience differences in real-world usage since Information on\r\n      Telco and GHIPPS charges are inconsistent.\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Disclaimer;\r\n","import { h } from \"preact\";\r\n\r\nconst FromPicker = ({ id, handleChange, title, theme }) => {\r\n  return (\r\n    <div className=\"fromGrid\" tabIndex={3}>\r\n      <div className=\"selectedText alignRight\">\r\n        <span\r\n          className=\"selectedPlatform pointer\"\r\n          role=\"button\"\r\n          onClick={(event) => handleChange(event, id)}\r\n        >\r\n          {title}\r\n        </span>\r\n        <span\r\n          role=\"button\"\r\n          className=\"togglePicker pointer\"\r\n          onClick={(event) => handleChange(event, id)}\r\n        >\r\n          Tap to change\r\n        </span>\r\n      </div>\r\n      <div\r\n        className={`selectedVisual ${theme} pointer`}\r\n        role=\"button\"\r\n        onClick={(event) => handleChange(event, id)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFromPicker.defaultProps = {\r\n  theme: \"\",\r\n};\r\n\r\nexport default FromPicker;\r\n","import { h } from \"preact\";\r\n\r\nconst ToPicker = ({ id, handleChange, title, theme }) => {\r\n  return (\r\n    <div className=\"toGrid\" tabIndex={4}>\r\n      <div\r\n        className={`selectedVisual ${theme} pointer`}\r\n        role=\"button\"\r\n        onClick={(event) => handleChange(event, id)}\r\n      />\r\n      <div className=\"selectedText\">\r\n        <span\r\n          className=\"selectedPlatform pointer\"\r\n          role=\"button\"\r\n          onClick={(event) => handleChange(event, id)}\r\n        >\r\n          {title}\r\n        </span>\r\n        <span\r\n          role=\"button\"\r\n          className=\"togglePicker pointer\"\r\n          onClick={(event) => handleChange(event, id)}\r\n        >\r\n          Tap to change\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nToPicker.defaultProps = {\r\n  theme: \"\",\r\n};\r\n\r\nexport default ToPicker;\r\n","import { h } from \"preact\";\r\nimport { useState, useEffect, useRef } from \"preact/hooks\";\r\nimport GridItem from \"../../components/containers/GridItem\";\r\nimport ItemGroup from \"../../components/containers/ItemGroup\";\r\nimport MainContainer from \"../../components/containers/MainContainer\";\r\nimport PickerArrow from \"../../components/form/PickerArrow\";\r\nimport Picker from \"../../components/form/Picker\";\r\nimport TextField from \"../../components/form/TextField\";\r\nimport { platforms } from \"../../data/platforms\";\r\nimport {\r\n  getElevyCharge,\r\n  exemption,\r\n  getTaxableAmount,\r\n  elevyTax,\r\n  calculatePlatformCharge,\r\n} from \"../../utils/calculations\";\r\nimport ChargeLabel from \"../../components/form/ChargeLabel\";\r\nimport TextDisplay from \"../../components/form/TextDisplay\";\r\nimport Charge from \"../../components/form/Charge\";\r\nimport Disclaimer from \"../../components/global/Disclaimer\";\r\nimport FromPicker from \"../../components/form/FromPicker\";\r\nimport ToPicker from \"../../components/form/ToPicker\";\r\nimport { preserveChoice } from \"../../utils/ux-enhancements\";\r\n\r\nconst Advanced = ({ showSimple }) => {\r\n  // state\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [previousAmount, setPreviousAmount] = useState(\"\");\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [pickerType, setPickerType] = useState(\"\");\r\n  const [transferAmount, setTransferAmount] = useState(0);\r\n  const [elevyAmount, setElevyAmount] = useState(0);\r\n  const [sendingFrom, setSendingFrom] = useState(\"mtn\");\r\n  const [sendingTo, setSendingTo] = useState(\"mtn\");\r\n  const [platformCharge, setPlatformCharge] = useState(0);\r\n\r\n  //refs\r\n  let elevyChargeRef = useRef(null);\r\n\r\n  const pickerData = {\r\n    from: {\r\n      pickerTitle: \"You are sending money using:\",\r\n      updateChoice: setSendingFrom,\r\n    },\r\n    to: {\r\n      pickerTitle: \"You are sending money to someone with:\",\r\n      updateChoice: setSendingTo,\r\n    },\r\n  };\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    if (amount == \"\") {\r\n      setTransferAmount(0);\r\n      setElevyAmount(0);\r\n    } else if (previousAmount !== \"\") {\r\n      let exempt = exemption(previousAmount);\r\n      let taxableAmount = getTaxableAmount(amount, exempt);\r\n      let elevyCharge = getElevyCharge(taxableAmount, elevyTax);\r\n      const platformCharge = calculatePlatformCharge(\r\n        sendingFrom,\r\n        sendingTo,\r\n        amount\r\n      );\r\n      let totalTransferAmount = amount + elevyCharge + platformCharge;\r\n\r\n      setTransferAmount(totalTransferAmount);\r\n      setElevyAmount(elevyCharge);\r\n      setPlatformCharge(platformCharge);\r\n    } else if (amount > 0) {\r\n      let exempt = exemption(0);\r\n      let taxableAmount = getTaxableAmount(amount, exempt);\r\n      let elevyCharge = getElevyCharge(taxableAmount, elevyTax);\r\n      const platformCharge = calculatePlatformCharge(\r\n        sendingFrom,\r\n        sendingTo,\r\n        amount\r\n      );\r\n      let totalTransferAmount = amount + elevyCharge + platformCharge;\r\n\r\n      setTransferAmount(totalTransferAmount);\r\n      setElevyAmount(elevyCharge);\r\n      setPlatformCharge(platformCharge);\r\n    } else {\r\n      setTransferAmount(amount);\r\n      setElevyAmount(0);\r\n    }\r\n  }, [amount, previousAmount, sendingFrom, sendingTo]);\r\n\r\n  // event handlers\r\n  const handleChange = (event, callback) => {\r\n    const parsedAmount = parseInt(event.target.value.replaceAll(\",\", \"\"), 10);\r\n    if (!isNaN(parsedAmount)) {\r\n      callback(parsedAmount);\r\n    } else {\r\n      callback(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePickerChange = (event, selection) => {\r\n    console.log(selection);\r\n    setPickerType(selection);\r\n    setShowPicker(true);\r\n  };\r\n\r\n  const handleTab = (event) => {\r\n    if (event.keyCode == 13) {\r\n      elevyChargeRef.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <form className=\"gridContainer\" method=\"POST\">\r\n        <GridItem className=\"gridItemFull\">\r\n          <div className=\"inputGroup centerFlex\">\r\n            <h1 className=\"displayText\">E-LEVY CALCULATOR</h1>\r\n          </div>\r\n        </GridItem>\r\n\r\n        <GridItem className=\"gridItemFullMobileOnly\">\r\n          <ItemGroup>\r\n            <TextField\r\n              label=\"You want to send:\"\r\n              id=\"amount\"\r\n              placeholder=\"0\"\r\n              inputProps={{\r\n                pattern: \"[0-9,.]\",\r\n                inputMode: \"numeric\",\r\n                required: true,\r\n                value: amount.toLocaleString(\"en-US\"),\r\n                onInput: (e) => handleChange(e, setAmount),\r\n                tabIndex: 1,\r\n              }}\r\n            />\r\n          </ItemGroup>\r\n        </GridItem>\r\n\r\n        <GridItem className=\"gridItemFullMobileOnly\">\r\n          <ItemGroup>\r\n            <TextField\r\n              label=\"You have already sent today: (optional)\"\r\n              id=\"previousAmount\"\r\n              placeholder=\"0\"\r\n              inputProps={{\r\n                pattern: \"[0-9,.]\",\r\n                inputMode: \"numeric\",\r\n                value: previousAmount.toLocaleString(\"en-US\"),\r\n                onInput: (e) => handleChange(e, setPreviousAmount),\r\n                tabIndex: 2,\r\n                onKeyUp: handleTab,\r\n              }}\r\n            />\r\n          </ItemGroup>\r\n        </GridItem>\r\n\r\n        {/* Platform Picker */}\r\n        <GridItem className=\"gridItemFull\">\r\n          <ItemGroup className=\"pickerRow\">\r\n            <div className=\"platformPickerGrid\">\r\n              <FromPicker\r\n                title={platforms.get(sendingFrom).name}\r\n                theme={platforms.get(sendingFrom).theme}\r\n                id=\"from\"\r\n                handleChange={handlePickerChange}\r\n              />\r\n              <PickerArrow />\r\n              <ToPicker\r\n                title={platforms.get(sendingTo).name}\r\n                theme={platforms.get(sendingTo).theme}\r\n                id=\"to\"\r\n                handleChange={handlePickerChange}\r\n              />\r\n            </div>\r\n          </ItemGroup>\r\n        </GridItem>\r\n\r\n        {/* Charges */}\r\n        <GridItem className=\"noMargin\">\r\n          <ItemGroup className=\"divider chargePadding\">\r\n            <ChargeLabel className=\"alignRight\" label=\"E-Levy Charge\" />\r\n            <TextDisplay className=\"alignRight\">\r\n              <Charge value={elevyAmount} />\r\n            </TextDisplay>\r\n          </ItemGroup>\r\n        </GridItem>\r\n        <GridItem className=\"noMargin\">\r\n          <ItemGroup className=\"chargePadding\">\r\n            <ChargeLabel\r\n              label={`${platforms.get(sendingFrom).company} Charge`}\r\n            />\r\n            <TextDisplay>\r\n              <Charge\r\n                chargeProps={{ ref: elevyChargeRef, tabIndex: 5 }}\r\n                value={platformCharge}\r\n              />\r\n            </TextDisplay>\r\n          </ItemGroup>\r\n        </GridItem>\r\n\r\n        {/* Payment Amount and Switcher */}\r\n        <GridItem className=\"centerFlex gridItemFull\">\r\n          <ItemGroup>\r\n            <ChargeLabel className=\"alignCenter\" label=\"You will pay:\" />\r\n            <TextDisplay>\r\n              <Charge className=\"charge\" value={transferAmount} />\r\n            </TextDisplay>\r\n          </ItemGroup>\r\n        </GridItem>\r\n        <GridItem className=\"gridItemFull\">\r\n          <ItemGroup className=\"centerFlex\">\r\n            <button\r\n              className=\"labelText button\"\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                preserveChoice({\r\n                  advanced: false,\r\n                });\r\n                showSimple();\r\n                return false;\r\n              }}\r\n            >\r\n              Simple View\r\n            </button>\r\n          </ItemGroup>\r\n        </GridItem>\r\n\r\n        {/* Picker */}\r\n        {showPicker && (\r\n          <Picker\r\n            data={platforms}\r\n            selectedPicker={pickerType}\r\n            title={pickerData[pickerType].pickerTitle}\r\n            close={() => setShowPicker(false)}\r\n            updateChoice={pickerData[pickerType].updateChoice}\r\n          />\r\n        )}\r\n\r\n        {/* Disclaimer */}\r\n        <GridItem className=\"gridItemFull\">\r\n          <ItemGroup className=\"centerFlex\">\r\n            <Disclaimer />\r\n          </ItemGroup>\r\n        </GridItem>\r\n      </form>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Advanced;\r\n"],"sourceRoot":""}