{"version":3,"sources":["webpack:///../src/index.js","webpack:///./routes/home/index.js"],"names":["getHookState","index","type","options","currentComponent","currentHook","hooks","__","__h","length","push","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","action","nextValue","setState","useReducer","useRef","initialValue","useMemo","current","factory","args","state","argsChanged","flushAfterPaintEffects","component","afterPaintEffects","shift","forEach","invokeCleanup","invokeEffect","e","hook","comp","cleanup","oldArgs","newArgs","some","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb","hasErrored","s","Home","amount","setAmount","transferAmount","setTransferAmount","elevyAmount","setElevyAmount","elevyFormRef","elevyChargeRef","elevyCharge","className","ref","method","for","tabIndex","name","pattern","inputMode","required","value","toLocaleString","onInput","event","parsedAmount","parseInt","target","replaceAll","isNaN","reportValidity","id","onKeyUp","keyCode","focus","maximumFractionDigits","minimumFractionDigits","readOnly"],"mappings":"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","file":"route-home.chunk.f9d9f.esm.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => ref.current = null;\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { h } from \"preact\";\r\nimport { useState, useEffect, useRef } from \"preact/hooks\";\r\n\r\nconst Home = () => {\r\n  const elevyTax = 0.015; //1.5/100\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [transferAmount, setTransferAmount] = useState(0);\r\n  const [elevyAmount, setElevyAmount] = useState(0);\r\n  let elevyFormRef = useRef(null);\r\n  let elevyChargeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (amount == \"\") {\r\n      setTransferAmount(0);\r\n      setElevyAmount(0);\r\n    } else if (amount > 100) {\r\n      let taxableAmount = amount - 100;\r\n      let elevyCharge = taxableAmount * elevyTax;\r\n      let totalTransferAmount = amount + elevyCharge;\r\n      setTransferAmount(totalTransferAmount);\r\n      setElevyAmount(elevyCharge);\r\n    } else {\r\n      setTransferAmount(amount);\r\n      setElevyAmount(0);\r\n    }\r\n  }, [amount]);\r\n\r\n  const handleChange = (event) => {\r\n    const parsedAmount = parseInt(event.target.value.replaceAll(\",\", \"\"), 10);\r\n    if (!isNaN(parsedAmount)) {\r\n      setAmount(parsedAmount);\r\n    } else {\r\n      elevyFormRef.current.reportValidity();\r\n      setAmount(\"\");\r\n    }\r\n  };\r\n\r\n  const handleTab = (event) => {\r\n    if (event.keyCode == 13) {\r\n      elevyChargeRef.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"mainContainer\">\r\n      <form className=\"gridContainer\" ref={elevyFormRef} method=\"POST\">\r\n        <div className=\"gridItem gridItemFull\">\r\n          <div className=\"inputGroup centerFlex\">\r\n            <h1 className=\"displayText\">E-LEVY CALCULATOR</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"gridItem\">\r\n          <div className=\"inputGroup\">\r\n            <label for=\"amount\" className=\"labelText\">\r\n              You want to send:\r\n            </label>\r\n            <div>\r\n              <input\r\n                tabIndex={1}\r\n                type=\"text\"\r\n                name=\"amount\"\r\n                pattern=\"[0-9,.]\"\r\n                inputMode=\"numeric\"\r\n                required\r\n                value={amount.toLocaleString(\"en-US\")}\r\n                onInput={handleChange}\r\n                className=\"inputField\"\r\n                id=\"amount\"\r\n                onKeyUp={handleTab}\r\n              />\r\n              <span className=\"currency\">GHS</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gridItem\">\r\n          <div className=\"inputGroup\">\r\n            <label for=\"transferAmount\" className=\"labelText\">\r\n              You will pay:\r\n            </label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={`${transferAmount.toLocaleString(\"en-US\", {\r\n                  maximumFractionDigits: 2,\r\n                  minimumFractionDigits: 2,\r\n                })}`}\r\n                readOnly\r\n                name=\"transferAmount\"\r\n                className=\"inputField inputFieldEmphasis\"\r\n                id=\"transferAmount\"\r\n              />\r\n              <span className=\"currency\">GHS</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gridItem gridItemFull\">\r\n          <div className=\"inputGroup centerFlex\">\r\n            <span className=\"labelText\">E-Levy Charge:</span>\r\n            <span\r\n              className=\"displayText charge\"\r\n              tabIndex={2}\r\n              ref={elevyChargeRef}\r\n            >\r\n              + GHS{\" \"}\r\n              {`${elevyAmount.toLocaleString(\"en-US\", {\r\n                maximumFractionDigits: 2,\r\n                minimumFractionDigits: 2,\r\n              })}`}\r\n            </span>\r\n            <span className=\"labelText\">Rate: 1.5%, first 100GHS exempt</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"gridItem gridItemFull\">\r\n          <div className=\"inputGroup centerFlex\">\r\n            <span className=\"disclaimer\">\r\n              Disclaimer: While we did our best to provide accurate results, we\r\n              cannot be held responsible for differences in your real-world\r\n              experience.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* <span className=\"footer\">Made with love</span> */}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}